import { Avatar, BottomNavigationBar, Button, DweetPanel } from "components";
import DweetEmbed from "components/DweetEmbed";
import { useUser } from "context/UserContext";
import { useViewport } from "context/ViewportContext";
import useAuth from "hooks/useAuth";
import useFirestore from "hooks/useFirestore";
import { Stars } from "icons";
import Head from "next/head";
import { ChangeEventHandler, useEffect, useState } from "react";
import { DweetEmbed as DweetEmbedType } from "types";
import styles from "../styles/Home.module.scss";

const Home = () => {
  const user = useUser();
  const auth = useAuth();
  const firestore = useFirestore();

  const viewport = useViewport();

  const [dweetMessage, setDweetMessage] = useState("");
  const [timeline, setTimeline] = useState<Array<DweetEmbedType>>([]);

  const handleChange: ChangeEventHandler = (event) => {
    const target = event.target as HTMLTextAreaElement;

    setDweetMessage(target.value);
  };

  const handleSubmit = () => {
    firestore
      .addDweet(dweetMessage)
      .then(() => setDweetMessage("Listo"))
      .catch(() => setDweetMessage("Error"));
  };

  useEffect(() => {
    firestore.getDweets(setTimeline);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return user.protectedContent(
    "LOGGED_IN",
    <div className={styles.home}>
      <Head>
        <title>Inicio / Ditter</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <header className={styles.header}>
          {viewport.size === "mobile" && (
            <span onClick={() => auth.signOut()}>
              <Avatar
                size="small"
                src={user.data.avatar}
                alt={user.data.username}
              />
            </span>
          )}
          <h2>Inicio</h2>
          <Stars />
        </header>
        {viewport.size !== "mobile" && (
          <DweetPanel
            handleChange={handleChange}
            handleSubmit={handleSubmit}
            user={user.data}
            value={dweetMessage}
          />
        )}

        {timeline &&
          timeline.map(
            (
              { avatar, message, nickname, timestamp, userId, username },
              key
            ) => (
              <DweetEmbed
                key={key}
                avatar={avatar}
                content={message}
                nickname={nickname}
                timeago={timestamp}
                username={username}
              />
            )
          )}

        {viewport.size === "mobile" && (
          <div className={styles["button-dweet-mobile"]}>
            <Button onClick={() => {}} icon={<Stars />} layout="circle" />
          </div>
        )}
      </main>

      <nav>
        {/* Mobile */}
        <BottomNavigationBar />
        {/* Tablet */}
        {/* Desctop */}
      </nav>
    </div>
  );
};

export default Home;
